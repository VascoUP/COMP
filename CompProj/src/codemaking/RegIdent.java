package codemaking;

import java.util.ArrayList;

public class RegIdent {
	public static boolean validator(String str, ArrayList<ArrayList<Integer>> edges) {
		int currentState = 1;
		for(int i = 0; i < str.length(); i++) {
			if(edges.get(currentState).get((int)str.charAt(i)) != -1)
				currentState = edges.get(currentState).get((int)str.charAt(i));
			else
				return false;
		}
		return true;
	}

	public static void main(String[] args) {
		String string = args[0];
		ArrayList<ArrayList<Integer>> edges= new ArrayList<ArrayList<Integer>>();
		ArrayList<Integer> map = new ArrayList<Integer>();
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(3);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		edges.add(map);
		map.clear();
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(2);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		edges.add(map);
		map.clear();
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(2);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		map.add(-1);
		edges.add(map);
		if(validator(string, edges))
			System.out.println("DFA matches!");
		else
			System.out.println("DFA does not match!");
	}
}